##DESCRIPTION
## Precalculus, Trigonometric Identities
##ENDDESCRIPTION

## KEYWORDS('precalculus','trigonometry','identities')
## Tagged by skm9b

## DBsubject('Trigonometry')
## DBchapter('Analytic Trigonometry')
## DBsection('Trigonometric Identities')
## Date('')
## Author('')
## Institution('ASU')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"MathObjects.pl",
"PGasu.pl"
);


TEXT(beginproblem());
$showPartialCorrectAnswers = 1;


@value=('\( \sec (x) \cos (x)\)','\( (\sec (x))^2-1  \)','\(\displaystyle \frac{\sin (x) \tan (x)}{\cos (x)} \)','\(\tan (x) \cos (x)\)','\( (\tan (x))^2 +\sin (x) \csc (x)\) ');
@answer=('1','(tan(x))^2','(tan(x))^2','sin(x)','(sec(x))^2');

# Now randomize the questions:
@slice = &NchooseK(5,5);
@shuffle = &shuffle(scalar(@slice));
($q1, $q2, $q3, $q4, $q5) = @value[@slice] ;
@answers =@answer[@slice];
Context('Numeric');
Context()->operators->undefine('*',' *','* ','/',' /','/ ','//');
Context()->operators->undefine('+', ' +','+ ','-','- ',' -');
for $j (0..$#answers) {
  $answers[$j] = Formula($answers[$j]);
}
#($ans1,$ans2,$ans3,$ans4,$ans5)=@answer[@slice];
($ans1,$ans2,$ans3,$ans4,$ans5)=@answers;

TEXT(EV3(<<'EOT'));
Each expression simplifies to a constant, a single trigonometric function or 
a power of a trigometric function. Use fundamental identities to simplify 
each expression.
$BR
$BR
1. $q1 = \{ans_rule(15)\}
$BR
2. $q2 = \{ans_rule(15)\} 
$BR
3. $q3 = \{ans_rule(15)\}
$BR
4. $q4 = \{ans_rule(15)\}
$BR
5. $q5 = \{ans_rule(15)\}
EOT

# We have to match as a function, operations other than
# exponents are not allowed, and no trig functions except the ones
# in the answer
$ckr = sub {
  my ($correct,$student,$ansHash) = @_;  # get correct and student MathObjects
  my $s = Formula($student->value);        # get coordinates of student answer
  my $c = $correct->value;
  my @tnames = ('sin','cos','tan','sec','csc','cot');
  $cstr = $c->stringify();
  $sstr = $s->stringify();
  $cstr =~ s/x//;
  $cstr =~ s/[^a-zA-Z]//g;
  for $tn (@tnames) {
	if($sstr =~ m/$tn/ and not ($cstr =~ m/$tn/)) {
      return 0;
	}
  }
  return $c==$s;
};

ANS($ans1->cmp(checker=>$ckr));
ANS($ans2->cmp(checker=>$ckr));
ANS($ans3->cmp(checker=>$ckr));
ANS($ans4->cmp(checker=>$ckr));
ANS($ans5->cmp(checker=>$ckr));
#ANS(str_cmp($ans1, filters=>["trim_whitespace"]));
#ANS(str_cmp($ans2, filters=>["trim_whitespace"]));
#ANS(str_cmp($ans3, filters=>["trim_whitespace"]));
#ANS(str_cmp($ans4, filters=>["trim_whitespace"]));
#ANS(str_cmp($ans5, filters=>["trim_whitespace"]));



ENDDOCUMENT();        # This should be the last executable line in the problem.
